{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport './sign-up.styles.scss';\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = () => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      signUpStart\n    } = this.props;\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match!\");\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render();\n  {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"I don't have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","useState","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","props","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport './sign-up.styles.scss';\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nconst SignUp = () =>\r\n{\r\n    const [ userCredentials, setCredentials ] = useState( {\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    } );\r\n\r\n    const handleSubmit = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const { signUpStart } = this.props;\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n        if ( password !== confirmPassword )\r\n        {\r\n            alert( \"Passwords don't match!\" );\r\n        }\r\n\r\n        signUpStart( { displayName, email, password } );\r\n    };\r\n\r\n    const handleChange = event =>\r\n    {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState( { [ name ]: value } );\r\n    };\r\n\r\n    render();\r\n    {\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n        return (\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\">I don't have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className=\"sign-up-form\" onSubmit={ this.handleSubmit }>\r\n                    <FormInput\r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        value={ displayName }\r\n                        onChange={ this.handleChange }\r\n                        label=\"Display Name\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={ email }\r\n                        onChange={ this.handleChange }\r\n                        label=\"Email\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={ password }\r\n                        onChange={ this.handleChange }\r\n                        label=\"Password\"\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        value={ confirmPassword }\r\n                        onChange={ this.handleChange }\r\n                        label=\"Confirm Password\"\r\n                        required\r\n                    />\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    signUpStart: userCredentials => dispatch( signUpStart( userCredentials ) )\r\n} );\r\n\r\nexport default connect( null, mapDispatchToProps )( SignUp );"]},"metadata":{},"sourceType":"module"}