{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = () => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render();\n  {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"I already have an account.\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Sign in with your email and password.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","props","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,uBAAP;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;;AAEA,MAAMC,MAAM,GAAG,MACf;AACI,QAAM,CAAEC,eAAF,EAAmBC,cAAnB,IAAsCR,QAAQ,CAAE;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAF,CAApD;;AAEA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IACrB;AACIA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAER,MAAAA;AAAF,QAAuB,KAAKS,KAAlC;AACA,UAAM;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKK,KAAjC;AAEAV,IAAAA,gBAAgB,CAAEI,KAAF,EAASC,QAAT,CAAhB;AACH,GARD;;AAUA,QAAMM,YAAY,GAAGJ,KAAK,IAC1B;AACI,UAAM;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBN,KAAK,CAACO,MAA9B;AAEA,SAAKC,QAAL,CAAe;AAAE,OAAEF,IAAF,GAAUD;AAAZ,KAAf;AACH,GALD;;AAOAI,EAAAA,MAAM;AACN;AACI,UAAM;AAAEjB,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFJ,EAGI;AAAM,MAAA,QAAQ,EAAG,KAAKH,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAG,KAAKI,KAAL,CAAWN,KAHvB;AAII,MAAA,YAAY,EAAG,KAAKO,YAJxB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAG,KAAKD,KAAL,CAAWL,QAHvB;AAII,MAAA,YAAY,EAAG,KAAKM,YAJxB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAeI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAGZ,iBAAtC;AAA0D,MAAA,cAAc,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,CAfJ,CAHJ,CADJ;AA0BH;AACJ,CApDD;;AAsDA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAM;AACrCnB,EAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAAEnB,iBAAiB,EAAnB,CADI;AAErCC,EAAAA,gBAAgB,EAAE,CAAEI,KAAF,EAASC,QAAT,KAAuBa,QAAQ,CAAElB,gBAAgB,CAAE;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAF,CAAlB;AAFZ,CAAN,CAAnC;;AAKA,eAAeT,OAAO,CAAE,IAAF,EAAQqB,kBAAR,CAAP,CAAqChB,MAArC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nconst SignIn = () =>\r\n{\r\n    const [ userCredentials, setCredentials ] = useState( { email: \"\", password: \"\" } );\r\n\r\n    const handleSubmit = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        emailSignInStart( email, password );\r\n    };\r\n\r\n    const handleChange = event =>\r\n    {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState( { [ name ]: value } );\r\n    };\r\n\r\n    render();\r\n    {\r\n        const { googleSignInStart } = this.props;\r\n\r\n        return (\r\n            <div className=\"sign-in\">\r\n                <h2 className=\"title\">I already have an account.</h2>\r\n                <span>Sign in with your email and password.</span>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <FormInput\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={ this.state.email }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"email\"\r\n                        required />\r\n                    <FormInput\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={ this.state.password }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"password\"\r\n                        required />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                        <CustomButton type=\"button\" onClick={ googleSignInStart } isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    googleSignInStart: () => dispatch( googleSignInStart() ),\r\n    emailSignInStart: ( email, password ) => dispatch( emailSignInStart( { email, password } ) )\r\n} );\r\n\r\nexport default connect( null, mapDispatchToProps )( SignIn );"]},"metadata":{},"sourceType":"module"}