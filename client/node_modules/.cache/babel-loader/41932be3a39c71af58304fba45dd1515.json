{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GACP;AACI,QAAMC,OAAO,CAACC,GAAR,CAAa,YAAb,CAAN;;AAEA,MACA;AACI,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAsB,aAAtB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAAEI,+BAAF,EAAmCS,QAAnC,CAAjC;AAEA,UAAMZ,GAAG,CAAEI,uBAAuB,CAAEU,cAAF,CAAzB,CAAT;AACH,GAPD,CAOE,OAAQC,KAAR,EACF;AACI,UAAMf,GAAG,CAAEK,uBAAuB,CAAEU,KAAK,CAACC,OAAR,CAAzB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GACP;AACI,QAAMnB,UAAU,CACZQ,eAAe,CAACY,uBADJ,EAEZX,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUY,SAAV,GACP;AACI,QAAMlB,GAAG,CAAE,CAAEF,IAAI,CAAEkB,qBAAF,CAAN,CAAF,CAAT;AACH","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\r\n\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync ()\r\n{\r\n    yield console.log( \"I am fired\" );\r\n\r\n    try\r\n    {\r\n        const collectionRef = firestore.collection( \"collections\" );\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call( convertCollectionsSnapshotToMap, snapshot );\r\n\r\n        yield put( fetchCollectionsSuccess( collectionsMap ) );\r\n    } catch ( error )\r\n    {\r\n        yield put( fetchCollectionsFailure( error.message ) );\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart ()\r\n{\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas ()\r\n{\r\n    yield all( [ call( fetchCollectionsStart ) ] );\r\n}"]},"metadata":{},"sourceType":"module"}