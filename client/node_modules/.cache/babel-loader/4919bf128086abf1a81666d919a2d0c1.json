{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","WithSpinner","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","loading","state","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAGA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAAEH,mBAAF,CAAlD;AACA,MAAMM,yBAAyB,GAAGH,WAAW,CAAEF,cAAF,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CACA;AACIC,EAAAA,iBAAiB,GACjB,CACC;;AAEDC,EAAAA,MAAM,GACN;AACI,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAI,GAAGH,KAAK,CAACI,IAAM,EAF3B;AAGI,MAAA,MAAM,EAAKH,KAAF,IACL,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGC;AAA5C,SAA2DD,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAI,GAAGD,KAAK,CAACI,IAAM,gBAD3B;AAEI,MAAA,MAAM,EAAKH,KAAF,IACL,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAGC;AAAvC,SAAsDD,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAiBH;;AA3BL;;AA4BC;AAED,MAAMI,eAAe,GAAGjB,wBAAwB,CAAE;AAC9CkB,EAAAA,oBAAoB,EAAEb;AADwB,CAAF,CAAhD;;AAIA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAM,EAAN,CAAnC;;AAIA,eAAerB,OAAO,CAAEkB,eAAF,EAAmBE,kBAAnB,CAAP,CAAgDX,QAAhD,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\n\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner( CollectionsOverview );\r\nconst CollectionPageWithSpinner = WithSpinner( CollectionPage );\r\n\r\nclass ShopPage extends React.Component\r\n{\r\n    componentDidMount ()\r\n    {\r\n    }\r\n\r\n    render ()\r\n    {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route\r\n                    exact\r\n                    path={ `${ match.path }` }\r\n                    render={ ( props ) =>\r\n                        <CollectionsOverviewWithSpinner isLoading={ loading } { ...props } />\r\n                    }\r\n                />\r\n                <Route\r\n                    path={ `${ match.path }/:collectionId` }\r\n                    render={ ( props ) =>\r\n                        <CollectionPageWithSpinner isLoading={ loading } { ...props } />\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector( {\r\n    isCollectionFetching: selectIsCollectionFetching\r\n} );\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n\r\n} );\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( ShopPage );"]},"metadata":{},"sourceType":"module"}