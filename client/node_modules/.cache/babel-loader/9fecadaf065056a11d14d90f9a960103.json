{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure, signUpSuccess } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  event.preventDefault();\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","event","preventDefault","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport\r\n{\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport\r\n{\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpFailure,\r\n    signUpSuccess\r\n} from \"./user.actions\";\r\n\r\nexport function* getSnapshotFromUserAuth ( userAuth )\r\n{\r\n    try\r\n    {\r\n        const userRef = yield call( createUserProfileDocument, userAuth );\r\n        const userSnapshot = yield userRef.get();\r\n        yield put( signInSuccess( { id: userSnapshot.id, ...userSnapshot.data() } ) );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle ()\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithPopup( googleProvider );\r\n        yield getSnapshotFromUserAuth( user );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail ( { payload: { email, password } } )\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithEmailAndPassword( email, password );\r\n        yield getSnapshotFromUserAuth( user );\r\n    }\r\n    catch ( error )\r\n    {\r\n        put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated ()\r\n{\r\n    try\r\n    {\r\n        const userAuth = yield getCurrentUser();\r\n\r\n        if ( !userAuth )\r\n        {\r\n            return;\r\n        }\r\n\r\n        yield getSnapshotFromUserAuth( userAuth );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signOut ()\r\n{\r\n    try\r\n    {\r\n        yield auth.signOut();\r\n        yield put( signOutSuccess() );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signOutFailure() );\r\n    }\r\n}\r\n\r\nexport function* signUp ( { payload: { email, password, displayName } } )\r\n{\r\n    event.preventDefault();\r\n\r\n    try\r\n    {\r\n        const { user } = yield auth.createUserWithEmailAndPassword( email, password );\r\n        yield createUserProfileDocument( user, { displayName } );\r\n        yield put( signUpSuccess() );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signUpFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle );\r\n}\r\n\r\nexport function* onEmailSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail );\r\n}\r\n\r\nexport function* onCheckUserSession ()\r\n{\r\n    yield takeLatest( UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated );\r\n}\r\n\r\nexport function* onSignOutStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.SIGN_OUT_START, signOut );\r\n}\r\n\r\nexport function* onSignUpStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.SIGN_UP_START, signUp );\r\n}\r\n\r\nexport function* userSagas ()\r\n{\r\n    yield all( [\r\n        call( onGoogleSignInStart ),\r\n        call( onEmailSignInStart ),\r\n        call( isUserAuthenticated ),\r\n        call( onSignOutStart ),\r\n        call( onSignUpStart )\r\n    ] );\r\n}"]},"metadata":{},"sourceType":"module"}