{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,OAAO,UAAUC,gBAAV,GACP;AACI,MACA;AACI,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACS,eAAL,CAAsBR,cAAtB,CAAvB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAAEI,yBAAF,EAA6BM,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CAAEO,mBAAmB,CAAE;AAAEU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAF,CAArB,CAAT;AACH,GAPD,CAOE,OAAQC,KAAR,EACF;AACI,UAAMnB,GAAG,CAAEQ,mBAAmB,CAAEW,KAAF,CAArB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA5B,EACP;AACI,MACA;AACI,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACoB,0BAAL,CAAiCF,KAAjC,EAAwCC,QAAxC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAAEI,yBAAF,EAA6BM,IAA7B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMhB,GAAG,CACLS,kBAAkB,CAAE;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAF,CADb,CAAT;AAEH,GARD,CAQE,OAAQC,KAAR,EACF;AACInB,IAAAA,GAAG,CAAEU,kBAAkB,CAAES,KAAF,CAApB,CAAH;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GACP;AACI,QAAM1B,UAAU,CAAEI,eAAe,CAACuB,oBAAlB,EAAwCf,gBAAxC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GACP;AACI,QAAM5B,UAAU,CAAEI,eAAe,CAACyB,mBAAlB,EAAuCR,eAAvC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GACP;AACI,QAAM5B,GAAG,CAAE,CAAEC,IAAI,CAAEuB,mBAAF,CAAN,EAA+BvB,IAAI,CAAEyB,kBAAF,CAAnC,CAAF,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.actions\";\r\n\r\nexport function* signInWithGoogle ()\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithPopup( googleProvider );\r\n        const userRef = yield call( createUserProfileDocument, user );\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put( googleSignInSuccess( { id: userSnapshot.id, ...userSnapshot.data() } ) );\r\n    } catch ( error )\r\n    {\r\n        yield put( googleSignInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail ( { payload: { email, password } } )\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithEmailAndPassword( email, password );\r\n        const userRef = yield call( createUserProfileDocument, user );\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(\r\n            emailSignInSuccess( { id: userSnapshot.id, ...userSnapshot.data() } ) );\r\n    } catch ( error )\r\n    {\r\n        put( emailSignInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle );\r\n}\r\n\r\nexport function* onEmailSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail );\r\n}\r\n\r\nexport function* userSagas ()\r\n{\r\n    yield all( [ call( onGoogleSignInStart ), call( onEmailSignInStart ) ] );\r\n}"]},"metadata":{},"sourceType":"module"}