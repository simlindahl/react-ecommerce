{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I already have an account.\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with your email and password.\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,uBAAP;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,+BAApD;;AAEA,MAAMC,MAAM,GAAG,CAAE;AAAED,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAF,KACf;AACI,QAAM,CAAEG,eAAF,EAAmBC,cAAnB,IAAsCR,QAAQ,CAAE;AAAES,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAF,CAApD;AAEA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IACrB;AACIA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAAEI,KAAF,EAASC,QAAT,CAAhB;AACH,GAJD;;AAMA,QAAMI,YAAY,GAAGF,KAAK,IAC1B;AACI,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AACAT,IAAAA,cAAc,CAAE,EAAE,GAAGD,eAAL;AAAsB,OAAES,IAAF,GAAUD;AAAhC,KAAF,CAAd;AACH,GAJD;;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI;AAAM,IAAA,QAAQ,EAAGJ,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAGF,KAHZ;AAII,IAAA,YAAY,EAAGK,YAJnB;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAGJ,QAHZ;AAII,IAAA,YAAY,EAAGI,YAJnB;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAGV,iBAAtC;AAA0D,IAAA,cAAc,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAfJ,CAHJ,CADJ;AA0BH,CA5CD;;AA8CA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAM;AACrCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAAEf,iBAAiB,EAAnB,CADI;AAErCC,EAAAA,gBAAgB,EAAE,CAAEI,KAAF,EAASC,QAAT,KAAuBS,QAAQ,CAAEd,gBAAgB,CAAE;AAAEI,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAF,CAAlB;AAFZ,CAAN,CAAnC;;AAKA,eAAeT,OAAO,CAAE,IAAF,EAAQiB,kBAAR,CAAP,CAAqCZ,MAArC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nconst SignIn = ( { emailSignInStart, googleSignInStart } ) =>\r\n{\r\n    const [ userCredentials, setCredentials ] = useState( { email: \"\", password: \"\" } );\r\n\r\n    const { email, password } = userCredentials;\r\n\r\n    const handleSubmit = async event =>\r\n    {\r\n        event.preventDefault();\r\n        emailSignInStart( email, password );\r\n    };\r\n\r\n    const handleChange = event =>\r\n    {\r\n        const { value, name } = event.target;\r\n        setCredentials( { ...userCredentials, [ name ]: value } );\r\n    };\r\n\r\n    return (\r\n        <div className=\"sign-in\">\r\n            <h2 className=\"title\">I already have an account.</h2>\r\n            <span>Sign in with your email and password.</span>\r\n            <form onSubmit={ handleSubmit }>\r\n                <FormInput\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={ email }\r\n                    handleChange={ handleChange }\r\n                    label=\"email\"\r\n                    required />\r\n                <FormInput\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={ password }\r\n                    handleChange={ handleChange }\r\n                    label=\"password\"\r\n                    required />\r\n                <div className=\"buttons\">\r\n                    <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                    <CustomButton type=\"button\" onClick={ googleSignInStart } isGoogleSignIn>Sign in with Google</CustomButton>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    googleSignInStart: () => dispatch( googleSignInStart() ),\r\n    emailSignInStart: ( email, password ) => dispatch( emailSignInStart( { email, password } ) )\r\n} );\r\n\r\nexport default connect( null, mapDispatchToProps )( SignIn );"]},"metadata":{},"sourceType":"module"}