{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport\r\n{\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\r\n\r\nexport function* getSnapshotFromUserAuth ( userAuth )\r\n{\r\n    try\r\n    {\r\n        const userRef = yield call( createUserProfileDocument, userAuth );\r\n        const userSnapshot = yield userRef.get();\r\n        yield put( signInSuccess( { id: userSnapshot.id, ...userSnapshot.data() } ) );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle ()\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithPopup( googleProvider );\r\n        yield getSnapshotFromUserAuth( user );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail ( { payload: { email, password } } )\r\n{\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithEmailAndPassword( email, password );\r\n        yield getSnapshotFromUserAuth( user );\r\n    }\r\n    catch ( error )\r\n    {\r\n        put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated ()\r\n{\r\n    try\r\n    {\r\n        const userAuth = yield getCurrentUser();\r\n\r\n        if ( !userAuth )\r\n        {\r\n            return;\r\n        }\r\n\r\n        yield getSnapshotFromUserAuth( userAuth );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signInFailure( error ) );\r\n    }\r\n}\r\n\r\nexport function* signOut ()\r\n{\r\n    try\r\n    {\r\n        yield auth.signOut();\r\n        yield put( signOutSuccess() );\r\n    }\r\n    catch ( error )\r\n    {\r\n        yield put( signOutFailure() );\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle );\r\n}\r\n\r\nexport function* onEmailSignInStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail );\r\n}\r\n\r\nexport function* onCheckUserSession ()\r\n{\r\n    yield takeLatest( UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated );\r\n}\r\n\r\nexport function* onSignOutStart ()\r\n{\r\n    yield takeLatest( UserActionTypes.SIGN_OUT_START, signOut );\r\n}\r\n\r\nexport function* userSagas ()\r\n{\r\n    yield all( [\r\n        call( onGoogleSignInStart ),\r\n        call( onEmailSignInStart ),\r\n        call( isUserAuthenticated )\r\n    ] );\r\n}"]},"metadata":{},"sourceType":"module"}