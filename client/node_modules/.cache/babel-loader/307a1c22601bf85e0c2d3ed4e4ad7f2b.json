{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionsOverview","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAAEE,mBAAF,CAAlD;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAAEJ,cAAF,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CACA;AACIC,EAAAA,iBAAiB,GACjB;AACI,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AAEAV,IAAAA,0BAA0B;AAC7B;;AAEDW,EAAAA,MAAM,GACN;AACI,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,oBAAT;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAI,GAAGE,KAAK,CAACG,IAAM,EAF3B;AAGI,MAAA,SAAS,EAAGjB,4BAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAI,GAAGc,KAAK,CAACG,IAAM,gBAD3B;AAEI,MAAA,MAAM,EAAKL,KAAF,IACL,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAG,CAACI;AAAxC,SAAkEJ,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAeH;;AA3BL;;AA4BC;AAED,MAAMM,eAAe,GAAGnB,wBAAwB,CAAE;AAC9CgB,EAAAA,oBAAoB,EAAEZ,0BADwB;AAE9Ca,EAAAA,kBAAkB,EAAEZ;AAF0B,CAAF,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAM;AACrClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAElB,0BAA0B,EAA5B;AADL,CAAN,CAAnC;;AAIA,eAAeJ,OAAO,CAAEoB,eAAF,EAAmBC,kBAAnB,CAAP,CAAgDV,QAAhD,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner( CollectionsOverview );\r\nconst CollectionPageWithSpinner = WithSpinner( CollectionPage );\r\n\r\nclass ShopPage extends React.Component\r\n{\r\n    componentDidMount ()\r\n    {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render ()\r\n    {\r\n        const { match, isCollectionFetching, isCollectionLoaded } = this.props;\r\n\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route\r\n                    exact\r\n                    path={ `${ match.path }` }\r\n                    component={ CollectionsOverviewContainer }\r\n                />\r\n                <Route\r\n                    path={ `${ match.path }/:collectionId` }\r\n                    render={ ( props ) =>\r\n                        <CollectionPageWithSpinner isLoading={ !isCollectionLoaded } { ...props } />\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector( {\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionLoaded\r\n} );\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    fetchCollectionsStartAsync: () => dispatch( fetchCollectionsStartAsync() )\r\n} );\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( ShopPage );"]},"metadata":{},"sourceType":"module"}