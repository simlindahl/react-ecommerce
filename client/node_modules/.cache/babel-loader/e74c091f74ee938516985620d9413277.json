{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAAEL,mBAAF,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAAEJ,cAAF,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CACA;AAAA;AAAA;AAAA,SACIC,KADJ,GACY;AACJC,MAAAA,OAAO,EAAE;AADL,KADZ;AAAA,SAKIC,uBALJ,GAK8B,IAL9B;AAAA;;AAOIC,EAAAA,iBAAiB,GACjB;AACI,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAsB,aAAtB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAA0B,MAAMC,QAAN,IACzD;AACI,YAAMC,cAAc,GAAGhB,+BAA+B,CAAEe,QAAF,CAAtD;AACAd,MAAAA,iBAAiB,CAAEe,cAAF,CAAjB;AACA,WAAKC,QAAL,CAAe;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAf;AACH,KAL8B,CAA/B;AAMH;;AAEDU,EAAAA,MAAM,GACN;AACI,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAI,GAAGY,KAAK,CAACC,IAAM,EAF3B;AAGI,MAAA,MAAM,EAAKT,KAAF,IACL,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGH;AAA5C,SAA2DG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAI,GAAGQ,KAAK,CAACC,IAAM,gBAD3B;AAEI,MAAA,MAAM,EAAKT,KAAF,IAAa,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAeH;;AAvCL;;AAwCC;;AAED,MAAMU,kBAAkB,GAAGC,QAAQ,KAAM;AACrCrB,EAAAA,iBAAiB,EAAEe,cAAc,IAAIM,QAAQ,CAAErB,iBAAiB,CAAEe,cAAF,CAAnB;AADR,CAAN,CAAnC;;AAIA,eAAepB,OAAO,CAAE,IAAF,EAAQyB,kBAAR,CAAP,CAAqChB,QAArC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner( CollectionsOverview );\r\nconst CollectionPageWithSpinner = WithSpinner( CollectionPage );\r\n\r\nclass ShopPage extends React.Component\r\n{\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount ()\r\n    {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection( \"collections\" );\r\n\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot( async snapshot =>\r\n        {\r\n            const collectionsMap = convertCollectionsSnapshotToMap( snapshot );\r\n            updateCollections( collectionsMap );\r\n            this.setState( { loading: false } );\r\n        } );\r\n    }\r\n\r\n    render ()\r\n    {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route\r\n                    exact\r\n                    path={ `${ match.path }` }\r\n                    render={ ( props ) =>\r\n                        <CollectionsOverviewWithSpinner isLoading={ loading } { ...props } />\r\n                    }\r\n                />\r\n                <Route\r\n                    path={ `${ match.path }/:collectionId` }\r\n                    render={ ( props ) => <CollectionPageWithSpinner /> }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    updateCollections: collectionsMap => dispatch( updateCollections( collectionsMap ) )\r\n} );\r\n\r\nexport default connect( null, mapDispatchToProps )( ShopPage );"]},"metadata":{},"sourceType":"module"}