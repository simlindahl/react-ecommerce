{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCwUFvIE93-EP551HrNR-LsXbABi6Hc4xw\",\n  authDomain: \"react-ecommerce-db-52b07.firebaseapp.com\",\n  databaseURL: \"https://react-ecommerce-db-52b07.firebaseio.com\",\n  projectId: \"react-ecommerce-db-52b07\",\n  storageBucket: \"react-ecommerce-db-52b07.appspot.com\",\n  messagingSenderId: \"186118817803\",\n  appId: \"1:186118817803:web:f914d1da5f24a044549f0e\",\n  measurementId: \"G-YDFS7H1G2R\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error while creating user.\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionReference = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(object => {\n    const newDocumentReference = collectionReference.doc();\n    batch.set(newDocumentReference, object);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionReference","collection","batch","forEach","object","newDocumentReference","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCwUFvIE93-EP551HrNR-LsXbABi6Hc4xw\",\r\n    authDomain: \"react-ecommerce-db-52b07.firebaseapp.com\",\r\n    databaseURL: \"https://react-ecommerce-db-52b07.firebaseio.com\",\r\n    projectId: \"react-ecommerce-db-52b07\",\r\n    storageBucket: \"react-ecommerce-db-52b07.appspot.com\",\r\n    messagingSenderId: \"186118817803\",\r\n    appId: \"1:186118817803:web:f914d1da5f24a044549f0e\",\r\n    measurementId: \"G-YDFS7H1G2R\"\r\n};\r\n\r\nexport const createUserProfileDocument = async ( userAuth, additionalData ) =>\r\n{\r\n    if ( !userAuth )\r\n    {\r\n        return;\r\n    }\r\n\r\n    const userRef = firestore.doc( `users/${ userAuth.uid }` );\r\n    const snapShot = await userRef.get();\r\n\r\n    if ( !snapShot.exists )\r\n    {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try\r\n        {\r\n            await userRef.set( {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            } );\r\n        } catch ( error )\r\n        {\r\n            console.error( \"Error while creating user.\", error.message );\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n};\r\n\r\nfirebase.initializeApp( config );\r\n\r\nexport const addCollectionAndDocuments = async ( collectionKey, objectsToAdd ) =>\r\n{\r\n    const collectionReference = firestore.collection( collectionKey );\r\n    const batch = firestore.batch();\r\n\r\n    objectsToAdd.forEach( object =>\r\n    {\r\n        const newDocumentReference = collectionReference.doc();\r\n        batch.set( newDocumentReference, object );\r\n    } );\r\n\r\n    return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = collections =>\r\n{\r\n    const transformedCollection = collections.docs.map( doc =>\r\n    {\r\n        const { title, items } = doc.data();\r\n\r\n        return {\r\n            routeName: encodeURI( title.toLowerCase() ),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        };\r\n    } );\r\n\r\n    return transformedCollection.reduce( ( accumulator, collection ) =>\r\n    {\r\n        accumulator[ collection.title.toLowerCase() ] = collection;\r\n\r\n        return accumulator;\r\n    }, {} );\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\ngoogleProvider.setCustomParameters( { prompt: 'select_account' } );\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup( googleProvider );\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}