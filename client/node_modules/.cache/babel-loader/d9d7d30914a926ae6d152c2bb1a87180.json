{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: ++cartItem.quantity\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n};","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAAEC,SAAF,EAAaC,aAAb,KAC7B;AACI,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA1D,CAAzB;;AAEA,MAAKH,gBAAL,EACA;AACI,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAQ,IAC1BA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACM,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAE,EAAEH,QAAQ,CAACG;AAApC,KADN,GAEMH,QAHH,CAAP;AAKH;;AAED,SAAO,CAAE,GAAGJ,SAAL,EAAgB,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAhB,CAAP;AACH,CAdM;AAgBP,OAAO,MAAMC,kBAAkB,GAAG,CAAER,SAAF,EAAaS,gBAAb,KAClC;AACI,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA7D,CAAzB;;AAEA,MAAKH,gBAAgB,CAACK,QAAjB,KAA8B,CAAnC,EACA;AACI,WAAOP,SAAS,CAACU,MAAV,CAAkBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA/D,CAAP;AACH;AACJ,CARM","sourcesContent":["export const addItemToCart = ( cartItems, cartItemToAdd ) =>\r\n{\r\n    const existingCartItem = cartItems.find( cartItem => cartItem.id === cartItemToAdd.id );\r\n\r\n    if ( existingCartItem )\r\n    {\r\n        return cartItems.map( cartItem =>\r\n            cartItem.id === cartItemToAdd.id\r\n                ? { ...cartItem, quantity: ++cartItem.quantity }\r\n                : cartItem\r\n        );\r\n    }\r\n\r\n    return [ ...cartItems, { ...cartItemToAdd, quantity: 1 } ];\r\n};\r\n\r\nexport const removeItemFromCart = ( cartItems, cartItemToRemove ) =>\r\n{\r\n    const existingCartItem = cartItems.find( cartItem => cartItem.id === cartItemToRemove.id );\r\n\r\n    if ( existingCartItem.quantity === 1 )\r\n    {\r\n        return cartItems.filter( cartItem => cartItem.id !== cartItemToRemove.id );\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}