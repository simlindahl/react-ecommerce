{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { ButtonContainer, CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from \"./cart-dropdown.styles\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Your cart is empty.\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","createStructuredSelector","CustomButton","CartItem","selectCartItems","toggleCartHidden","ButtonContainer","CartDropdownContainer","CartItemsContainer","EmptyMessageContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,kBAAjD,EAAqEC,qBAArE,QAAkG,wBAAlG;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAF,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQF,SAAS,CAACG,MAAV,GACMH,SAAS,CAACI,GAAV,CAAeC,QAAQ,IACrB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAGA,QAAQ,CAACC,EAAzB;AAA8B,EAAA,IAAI,EAAGD,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADN,GAIM;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANd,CADJ,EAUI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAG,MACxB;AACIJ,IAAAA,OAAO,CAACM,IAAR,CAAc,WAAd;AACAL,IAAAA,QAAQ,CAAER,gBAAgB,EAAlB,CAAR;AACH,GAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADJ;;AAoBA,MAAMc,eAAe,GAAGlB,wBAAwB,CAAE;AAC9CU,EAAAA,SAAS,EAAEP;AADmC,CAAF,CAAhD;AAIA,eAAeJ,UAAU,CAAED,OAAO,CAAEoB,eAAF,CAAP,CAA4BT,YAA5B,CAAF,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\n\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\n\r\nimport { ButtonContainer, CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from \"./cart-dropdown.styles\";\r\n\r\nconst CartDropdown = ( { cartItems, history, dispatch } ) => (\r\n    <div className=\"cart-dropdown\">\r\n        <div className=\"cart-items\">\r\n            {\r\n                cartItems.length\r\n                    ? cartItems.map( cartItem =>\r\n                        <CartItem key={ cartItem.id } item={ cartItem } />\r\n                    )\r\n                    : <span className=\"empty-message\">Your cart is empty.</span>\r\n            }\r\n        </div>\r\n        <CustomButton onClick={ () =>\r\n        {\r\n            history.push( \"/checkout\" );\r\n            dispatch( toggleCartHidden() );\r\n        } }>\r\n            GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector( {\r\n    cartItems: selectCartItems\r\n} );\r\n\r\nexport default withRouter( connect( mapStateToProps )( CartDropdown ) );"]},"metadata":{},"sourceType":"module"}