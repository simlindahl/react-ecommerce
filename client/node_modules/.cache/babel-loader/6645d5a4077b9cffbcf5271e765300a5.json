{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n\n      this.setState({\n        email: '',\n        password: \"\"\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"I already have an account.\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sign in with your email and password.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart)\n});\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\r\nimport { googleSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nclass SignIn extends React.Component\r\n{\r\n    constructor ( props )\r\n    {\r\n        super( props );\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const { email, password } = this.state;\r\n\r\n        try\r\n        {\r\n            await auth.signInWithEmailAndPassword( email, password );\r\n\r\n            this.setState( { email: '', password: '' } );\r\n        } catch ( error )\r\n        {\r\n            console.error( error );\r\n        }\r\n\r\n        this.setState( { email: '', password: \"\" } );\r\n    };\r\n\r\n    handleChange = event =>\r\n    {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState( { [ name ]: value } );\r\n    };\r\n\r\n    render ()\r\n    {\r\n        return (\r\n            <div className=\"sign-in\">\r\n                <h2 className=\"title\">I already have an account.</h2>\r\n                <span>Sign in with your email and password.</span>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <FormInput\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={ this.state.email }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"email\"\r\n                        required />\r\n                    <FormInput\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={ this.state.password }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"password\"\r\n                        required />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                        <CustomButton onClick={ signInWithGoogle } isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    googleSignInStart: () => dispatch( googleSignInStart )\r\n} );\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}