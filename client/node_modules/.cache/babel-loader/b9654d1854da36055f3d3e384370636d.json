{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCwUFvIE93-EP551HrNR-LsXbABi6Hc4xw\",\n  authDomain: \"react-ecommerce-db-52b07.firebaseapp.com\",\n  databaseURL: \"https://react-ecommerce-db-52b07.firebaseio.com\",\n  projectId: \"react-ecommerce-db-52b07\",\n  storageBucket: \"react-ecommerce-db-52b07.appspot.com\",\n  messagingSenderId: \"186118817803\",\n  appId: \"1:186118817803:web:f914d1da5f24a044549f0e\",\n  measurementId: \"G-YDFS7H1G2R\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error while creating user.\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,0CAFD;AAGXC,EAAAA,WAAW,EAAE,iDAHF;AAIXC,EAAAA,SAAS,EAAE,0BAJA;AAKXC,EAAAA,aAAa,EAAE,sCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAQC,QAAR,EAAkBC,cAAlB,KACzC;AACI,MAAK,CAACD,QAAN,EACA;AACI;AACH;;AAED,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAgB,SAASJ,QAAQ,CAACK,GAAK,EAAvC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAK,CAACD,QAAQ,CAACE,MAAf,EACA;AACI,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QACA;AACI,YAAMV,OAAO,CAACW,GAAR,CAAa;AACfJ,QAAAA,WADe;AAEfC,QAAAA,KAFe;AAGfC,QAAAA,SAHe;AAIf,WAAGV;AAJY,OAAb,CAAN;AAMH,KARD,CAQE,OAAQa,KAAR,EACF;AACIC,MAAAA,OAAO,CAACD,KAAR,CAAe,4BAAf,EAA6CA,KAAK,CAACE,OAAnD;AACH;AACJ;;AAED,SAAOd,OAAP;AACH,CA9BM;AAgCPb,QAAQ,CAAC4B,aAAT,CAAwB3B,MAAxB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA8B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA9B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAsBL,QAAtB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCwUFvIE93-EP551HrNR-LsXbABi6Hc4xw\",\r\n    authDomain: \"react-ecommerce-db-52b07.firebaseapp.com\",\r\n    databaseURL: \"https://react-ecommerce-db-52b07.firebaseio.com\",\r\n    projectId: \"react-ecommerce-db-52b07\",\r\n    storageBucket: \"react-ecommerce-db-52b07.appspot.com\",\r\n    messagingSenderId: \"186118817803\",\r\n    appId: \"1:186118817803:web:f914d1da5f24a044549f0e\",\r\n    measurementId: \"G-YDFS7H1G2R\"\r\n};\r\n\r\nexport const createUserProfileDocument = async ( userAuth, additionalData ) =>\r\n{\r\n    if ( !userAuth )\r\n    {\r\n        return;\r\n    }\r\n\r\n    const userRef = firestore.doc( `users/${ userAuth.uid }` );\r\n    const snapShot = await userRef.get();\r\n\r\n    if ( !snapShot.exists )\r\n    {\r\n        const { displayName, email } = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try\r\n        {\r\n            await userRef.set( {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            } );\r\n        } catch ( error )\r\n        {\r\n            console.error( \"Error while creating user.\", error.message );\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n};\r\n\r\nfirebase.initializeApp( config );\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters( { prompt: 'select_account' } );\r\nexport const signInWithGoogle = () => auth.signInWithPopup( provider );\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}