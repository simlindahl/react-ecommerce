{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAAED,cAAF,CAApB;;AAEA,IAAKE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA9B,EACA;AACIH,EAAAA,WAAW,CAACI,IAAZ,CAAkBV,MAAlB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAAEK,WAAF,EAAeJ,eAAe,CAAE,GAAGO,WAAL,CAA9B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAoBR,QAApB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAAEU,KAAF,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [ sagaMiddleware ];\r\n\r\nif ( process.env.NODE_ENV === \"development\" )\r\n{\r\n    middlewares.push( logger );\r\n}\r\n\r\nexport const store = createStore( rootReducer, applyMiddleware( ...middlewares ) );\r\n\r\nsagaMiddleware.run( rootSaga );\r\n\r\nexport const persistor = persistStore( store );\r\n\r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}