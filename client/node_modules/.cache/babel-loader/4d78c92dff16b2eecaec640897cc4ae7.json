{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SimonLindahl\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"I already have an account.\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign in with your email and password.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/SimonLindahl/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nclass SignIn extends React.Component\r\n{\r\n    constructor ( props )\r\n    {\r\n        super( props );\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    handleSubmit = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const { emailSignInStart } = this.props;\r\n        const { email, password } = this.state;\r\n\r\n        emailSignInStart( email, password );\r\n    };\r\n\r\n    handleChange = event =>\r\n    {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState( { [ name ]: value } );\r\n    };\r\n\r\n    render ()\r\n    {\r\n        const { googleSignInStart } = this.props;\r\n\r\n        return (\r\n            <div className=\"sign-in\">\r\n                <h2 className=\"title\">I already have an account.</h2>\r\n                <span>Sign in with your email and password.</span>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <FormInput\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={ this.state.email }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"email\"\r\n                        required />\r\n                    <FormInput\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={ this.state.password }\r\n                        handleChange={ this.handleChange }\r\n                        label=\"password\"\r\n                        required />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign in</CustomButton>\r\n                        <CustomButton type=\"button\" onClick={ googleSignInStart } isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ( {\r\n    googleSignInStart: () => dispatch( googleSignInStart() ),\r\n    emailSignInStart: ( email, password ) => dispatch( emailSignInStart( { email, password } ) )\r\n} );\r\n\r\nexport default connect( null, mapDispatchToProps )( SignIn );"]},"metadata":{},"sourceType":"module"}